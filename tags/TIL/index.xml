<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TIL on</title><link>https://helingchao.github.io/quartz/tags/TIL/</link><description>Recent content in TIL on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://helingchao.github.io/quartz/tags/TIL/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://helingchao.github.io/quartz/notes/TIL-2023-06-26-Project-Logging-%E5%A6%82%E4%BD%95%E5%8F%A3%E8%AF%AD%E8%A1%A8%E8%BE%BE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://helingchao.github.io/quartz/notes/TIL-2023-06-26-Project-Logging-%E5%A6%82%E4%BD%95%E5%8F%A3%E8%AF%AD%E8%A1%A8%E8%BE%BE/</guid><description>[[../../Readwise/Articles/Highlights@What to Blog About|Highlights@What to Blog About]] 中提到 [[TIL]], 以及记录 [[Project Logging]].
[[../../Course 阅读与写作]] 课程中, 有一节课是关于如何 [[口语表达]], 其中的主要观点:
好的口语表达的重要性. 口语表达好的人在工作中 (汇报工作、工作报告) 更容易被看见,提拔.</description></item><item><title/><link>https://helingchao.github.io/quartz/notes/TIL-2023-06-27-OLAP-Indexes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://helingchao.github.io/quartz/notes/TIL-2023-06-27-OLAP-Indexes/</guid><description>关于 OLAP Indexes 补充小结 OLTP Index, OLAP Index 的差异: OLTP Index/B+Tree, 针对选择率低的查询 (low selectivity predicates) , 需要考虑增量 update.</description></item><item><title/><link>https://helingchao.github.io/quartz/notes/TIL-2023-06-29-Modern-OLAP-DBMS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://helingchao.github.io/quartz/notes/TIL-2023-06-29-Modern-OLAP-DBMS/</guid><description>今日梳理 [[../../15-721@Lecture 02 Modern Analytical Database Systems|15-721@Lecture 02 Modern Analytical Database Systems]]:
关于 Modern OLAP DBMS 分析 Modern [[OLAP]] DBMS, 一种方式是拆开几个模块逐个分析:</description></item><item><title/><link>https://helingchao.github.io/quartz/notes/TIL-2023-07-05-%E7%90%86%E8%A7%A3%E4%BC%98%E5%8C%96%E5%99%A8-Innodb-Insert-%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://helingchao.github.io/quartz/notes/TIL-2023-07-05-%E7%90%86%E8%A7%A3%E4%BC%98%E5%8C%96%E5%99%A8-Innodb-Insert-%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/</guid><description>理解优化器 对于一个数据库查询 (Query), 可以有不同的执行路径 (每种路径的查询结果是相同的), 类似从出发从地点 A 到 地点 B, 可以规划不同的路径.
不同的查询执行路径, 执行的效率 (例如执行时间) 是不同的.
什么是优化器 优化器的输入是一个 Query 语句, 输出是一个最优的 (almost)、可执行的查询计划.</description></item><item><title/><link>https://helingchao.github.io/quartz/notes/TIL-2023-07-06-Query-Planning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://helingchao.github.io/quartz/notes/TIL-2023-07-06-Query-Planning/</guid><description>Notes on Query Planning Background Info SQL is declarative, 用户不指定执行查询的处理细节, 优化器决策/给出一个最优的执行计划. IBM SYSTEM R 第一个实现了 query optimizer in 1970s.</description></item></channel></rss>